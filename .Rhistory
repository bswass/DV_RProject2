}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
# Shorten column names to less than 30 characters in order to prevent SQL error
for(n in names(df)) {
replace (n, "attributes", "attr")
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
# Shorten column names to less than 30 characters in order to prevent SQL error
for(n in names(df)) {
# Change "attributes" to "attr".
df[n] <- data.frame(lapply(df[n], gsub, pattern="attributes",replacement= "attr"))
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
# Shorten column names to less than 30 characters in order to prevent SQL error
for(n in names(df)) {
# Change "attributes" to "attr".
df[n] <- data.frame(lapply(df[n], gsub, pattern="attributes",replacement= "attr"))
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
# Change attributes to attr
df[d] <- data.frame(lapply(df[d], gsub, pattern="attributes",replacement= "attr"))
}
}
library(lubridate)
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes
names(df) <- gsub("\\attributes+", "attr", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes
names(df) <- gsub("\attributes+", "attr", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes
names(df) <- gsub("\\\attributes+", "attr", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes
names(df) <- gsub("attributes", "attr", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes with attr
names(df) <- gsub("attributes", "attr", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Ambience", "Ambi", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes with attr
names(df) <- gsub("attributes", "attr", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Ambience", "Ambi", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Specialized", "Spec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Dietary_Restrictions", "Diet_Rest", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes with attr
names(df) <- gsub("attributes", "attr", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Ambience", "Ambi", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Specialized", "Spec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Dietary_Restrictions", "Diet_Rest", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Types", "", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes with attr
names(df) <- gsub("attributes", "attr", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Ambience", "Ambi", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Specialized", "Spec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Dietary_Restrictions", "DietRest", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Types", "", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Hair__Spec", "HairSpec", names(df))
summary (df)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes with attr
names(df) <- gsub("attributes", "attr", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Ambience", "Ambi", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Specialized", "Spec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Dietary_Restrictions", "DietRest", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Types", "", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Hair__Spec", "HairSpec", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes with attr
names(df) <- gsub("attributes", "attr", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Ambience", "Ambi", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Specialized", "Spec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Dietary_Restrictions", "DietRest", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Types", "", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Hair__Spec", "HairSpec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("africanamerican", "afam", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Payment", "PayBy", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("straightperms", "st8perm", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Accessible", "Access", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("extensions", "ext", names(df))
summary (df)
str(df)
source('C:/DataViz/2.DataWrangling/02 Data Wrangling/datawrangle.R')
setwd("C:/DataViz/2.DataWrangling/01 Data")
file_path <- "yelp_academic_dataset_business.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# Replace attributes with attr
names(df) <- gsub("attributes", "attr", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Ambience", "Ambi", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Specialized", "Spec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Dietary_Restrictions", "DietRest", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Types", "", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Hair__Spec", "HairSpec", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("africanamerican", "afam", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Payment", "PayBy", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("straightperms", "st8perm", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("Accessible", "Access", names(df))
# Replace Ambience with Ambi
names(df) <- gsub("extensions", "ext", names(df))
summary (df)
str(df)
measures <- c("latitude", "review_count", "stars", "attributes_Price_Range", "longitude")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from yelpbusiness"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_btb687', PASS='orcl_btb687', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary (df)
